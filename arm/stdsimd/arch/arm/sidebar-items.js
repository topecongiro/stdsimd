initSidebarItems({"fn":[["_clz_u16","Count Leading Zeros."],["_clz_u32","Count Leading Zeros."],["_clz_u8","Count Leading Zeros."],["_rbit_u32","Reverse the bit order."],["_rev_u16","Reverse the order of the bytes."],["_rev_u32","Reverse the order of the bytes."],["qadd","Signed saturating addition"],["qadd16","Saturating two 16-bit integer additions"],["qadd8","Saturating four 8-bit integer additions"],["qasx","Returns the 16-bit signed saturated equivalent of"],["qsax","Returns the 16-bit signed saturated equivalent of"],["qsub","Signed saturating subtraction"],["qsub16","Saturating two 16-bit integer subtraction"],["qsub8","Saturating two 8-bit integer subtraction"],["sadd16","Returns the 16-bit signed saturated equivalent of"],["sadd8","Returns the 8-bit signed saturated equivalent of"],["sasx","Returns the 16-bit signed equivalent of"],["sel","Select bytes from each operand according to APSR GE flags"],["shadd16","Signed halving parallel halfword-wise addition."],["shadd8","Signed halving parallel byte-wise addition."],["shsub16","Signed halving parallel halfword-wise subtraction."],["shsub8","Signed halving parallel byte-wise subtraction."],["smlad","Dual 16-bit Signed Multiply with Addition of products and 32-bit accumulation."],["smlsd","Dual 16-bit Signed Multiply with Subtraction  of products and 32-bit accumulation and overflow detection."],["smuad","Signed Dual Multiply Add."],["smuadx","Signed Dual Multiply Add Reversed."],["smusd","Signed Dual Multiply Subtract."],["smusdx","Signed Dual Multiply Subtract Reversed."],["usad8","Sum of 8-bit absolute differences."],["usad8a","Sum of 8-bit absolute differences and constant."]],"struct":[["int16x2_t","ARM-specific 32-bit wide vector of two packed `i16`."],["int8x4_t","ARM-specific 32-bit wide vector of four packed `i8`."],["uint16x2_t","ARM-specific 32-bit wide vector of two packed `u16`."],["uint8x4_t","ARM-specific 32-bit wide vector of four packed `u8`."]]});